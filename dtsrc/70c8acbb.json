{"keywords":{"scenario":false,"async":false,"export":false,"function":true,"algoprop":false},"tag":"83804956","params":"visuals\nskewer","when_created":1657700335.6014,"parent_id":"794efc2c","props":[],"created_by":"stipan","items":{"4":{"branchId":3,"one":"38","id":"4","type":"branch","text":"Exit"},"40":{"type":"action","text":"hskewer = visuals.header.skewer","one":"41","id":"40"},"10":{"type":"action","id":"10","one":"11","text":"node = getDown(start)\nboundary = getBoundary(visuals, skewer)"},"5":{"branchId":2,"one":"12","id":"5","type":"branch","text":"Step"},"41":{"type":"action","id":"41","one":"42","text":"boundary = getBoundary(visuals, hskewer)"},"22":{"flag1":0,"id":"22","type":"question","two":"23","one":"47","text":"rightJ.up"},"32":{"type":"action","text":"linkSkewers(\n    visuals,\n    rightJ.skewer,\n    skewer,\n    boundary\n)","one":"44","id":"32"},"11":{"type":"action","id":"11","one":"5","text":"linkSkewers(\n    visuals,\n    finish.skewer,\n    skewer,\n    boundary\n)"},"23":{"type":"action","text":"linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary + metre\n)","one":"45","id":"23"},"7":{"flag1":1,"id":"7","type":"question","text":"tail.left","one":"8","two":"4"},"42":{"type":"action","id":"42","one":"1","text":"linkSkewers(\n    visuals,\n    left.skewer,\n    hskewer,\n    boundary\n)"},"52":{"flag1":0,"id":"52","type":"question","text":"node.subtype === \"parbegin\"","one":"35","two":"53"},"13":{"flag1":0,"id":"13","type":"question","text":"node.type === \"question\"","one":"4","two":"14"},"14":{"type":"action","text":"linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary + metre\n)","one":"4","id":"14"},"8":{"type":"action","text":"start = getNextDown(head)\nfinish = getNextUp(tail)","one":"9","id":"8"},"45":{"type":"action","text":"node = getDown(node)","one":"5","id":"45"},"9":{"type":"action","id":"9","one":"10","text":"linkSkewers(\n    visuals,\n    start.skewer,\n    skewer,\n    start.w + metre\n)"},"15":{"type":"case","one":"30","id":"15"},"16":{"one":"28","id":"16","type":"case","two":"15","text":"\"select\""},"35":{"flag1":1,"id":"35","type":"question","text":"node.down","one":"37","two":"36"},"25":{"type":"action","id":"25","one":"5","text":"corner = goRight(node)\nnode = getDown(corner)"},"46":{"type":"action","id":"46","one":"22","text":"rightJ = getRight(node)"},"17":{"one":"46","id":"17","type":"case","text":"\"question\"","two":"19"},"36":{"type":"action","id":"36","one":"5","text":"node = goLeft(node)"},"27":{"type":"action","id":"27","one":"5","text":"node = lastCase(node)"},"37":{"type":"action","id":"37","one":"5","text":"node = getDown(node)"},"38":{"flag1":1,"id":"38","type":"question","two":"39","one":"1","text":"visuals.branches.length === 1"},"28":{"type":"action","id":"28","one":"27","text":"linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary\n)"},"48":{"type":"action","id":"48","one":"3","text":"metre = visuals.config.metre"},"39":{"type":"action","text":"left = getSilCorner(visuals)","one":"40","id":"39"},"29":{"type":"action","id":"29","one":"5","text":"node = getDown(node)"},"1":{"type":"end","id":"1"},"6":{"flag1":1,"id":"6","type":"question","text":"head.left","one":"7","two":"4"},"53":{"type":"action","text":"corner = goRight(node)\nnode = getDown(corner)","one":"5","id":"53"},"47":{"type":"action","id":"47","one":"25","text":"linkSkewers(\n    visuals,\n    rightJ.skewer,\n    skewer,\n    boundary\n)"},"44":{"type":"action","text":"node = getDown(node)","one":"5","id":"44"},"43":{"type":"action","text":"linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary\n)","one":"52","id":"43"},"18":{"type":"select","id":"18","one":"17","text":"node.type"},"19":{"one":"33","id":"19","type":"case","two":"20","text":"\"arrow-loop\""},"3":{"type":"action","id":"3","one":"6","text":"head = skewerHead(skewer)\ntail = skewerTail(skewer)"},"2":{"branchId":1,"one":"48","id":"2","type":"branch","text":"Start"},"30":{"type":"action","id":"30","one":"29","text":"linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary\n)"},"33":{"type":"action","id":"33","one":"32","text":"rightJ = getRight(node)"},"12":{"flag1":0,"id":"12","type":"question","text":"node === finish","one":"18","two":"13"},"20":{"one":"43","id":"20","type":"case","text":"\"junction\"","two":"16"}},"updated_by":"stipan","version":20180619,"type":"drakon","language":"LANG_S42","name":"findLeftLinks","when_updated":1666934417.1709}