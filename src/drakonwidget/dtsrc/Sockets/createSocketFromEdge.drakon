{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "422611463",
    "params": "visuals\nedge\nop\ntype\nimageData",
    "when_created": 1662484760.1856,
    "parent_id": "41f1c7b9",
    "props": [],
    "when_updated": 1676111231.3077,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "type": "branch",
            "branchId": 0,
            "one": "23",
            "id": "2"
        },
        "3": {
            "type": "action",
            "id": "3",
            "one": "4",
            "content": "head = edge.head\ntail = edge.tail"
        },
        "4": {
            "type": "action",
            "one": "5",
            "id": "4",
            "content": "Min = 10"
        },
        "5": {
            "type": "action",
            "one": "6",
            "id": "5",
            "content": "hw = Math.max(Min, head.w)\nhh = Math.max(Min, head.h)\ntw = Math.max(Min, tail.w)\nth = Math.max(Min, tail.h)"
        },
        "6": {
            "flag1": 0,
            "id": "6",
            "type": "question",
            "two": "8",
            "one": "7",
            "content": "edge.vertical"
        },
        "7": {
            "type": "action",
            "id": "7",
            "one": "16",
            "content": "x1 = getX(head) + hw\ny1 = getY(head)\nx2 = getX(tail) - tw\ny2 = y1"
        },
        "8": {
            "type": "action",
            "id": "8",
            "one": "15",
            "content": "x1 = getX(head)\ny1 = getY(head) + hh\nx2 = x1\ny2 = getY(tail) - th"
        },
        "9": {
            "type": "action",
            "id": "9",
            "one": "14",
            "content": "x = (x1 + x2) / 2\ny = (y1 + y2) / 2"
        },
        "10": {
            "type": "action",
            "one": "11",
            "id": "10",
            "content": "socket = createSocket(\n    visuals,\n    x,\n    y,\n    op,\n    type,\n    radius\n)"
        },
        "11": {
            "type": "action",
            "id": "11",
            "one": "37",
            "content": "socket.edge = edge"
        },
        "13": {
            "type": "action",
            "id": "13",
            "one": "1",
            "content": "return socket"
        },
        "14": {
            "type": "action",
            "id": "14",
            "one": "10",
            "content": "radius = visuals.config.socketTouchRadius"
        },
        "15": {
            "type": "action",
            "one": "21",
            "id": "15",
            "content": "startPos = getVerticalStartPos(edge)\nendPos = getVerticalEndPos(edge)\nlength = endPos - startPos"
        },
        "16": {
            "type": "action",
            "id": "16",
            "one": "22",
            "content": "startPos = edge.head.x + edge.head.w\nendPos = edge.tail.x - edge.tail.w\nlength = endPos - startPos"
        },
        "19": {
            "flag1": 0,
            "id": "19",
            "type": "question",
            "two": "24",
            "one": "13",
            "content": "length > radius * 2"
        },
        "21": {
            "type": "action",
            "id": "21",
            "one": "9",
            "content": "box = createBox(\n    x1 - radius,\n    startPos,\n    radius * 2,\n    length\n)"
        },
        "22": {
            "type": "action",
            "one": "9",
            "id": "22",
            "content": "box = createBox(\n    startPos,\n    y1 - radius,\n    length,\n    radius * 2\n)"
        },
        "23": {
            "type": "action",
            "one": "3",
            "id": "23",
            "content": "radius = visuals.config.socketRadius"
        },
        "24": {
            "type": "action",
            "id": "24",
            "one": "25",
            "content": "socket.box = box"
        },
        "25": {
            "type": "action",
            "one": "13",
            "id": "25",
            "content": "socket.startPos = startPos\nsocket.endPos = endPos"
        },
        "29": {
            "type": "case",
            "one": "33",
            "id": "29"
        },
        "30": {
            "one": "35",
            "id": "30",
            "type": "case",
            "two": "29",
            "content": "\"parceiling\""
        },
        "31": {
            "one": "36",
            "id": "31",
            "type": "case",
            "two": "30",
            "content": "\"floor\""
        },
        "32": {
            "type": "select",
            "id": "32",
            "one": "31",
            "content": "edge.role"
        },
        "33": {
            "type": "action",
            "id": "33",
            "one": "19",
            "content": "socket.target = edge.finalTarget.itemId"
        },
        "35": {
            "type": "action",
            "one": "19",
            "id": "35",
            "content": "socket.target = getParTarget(edge.head)"
        },
        "36": {
            "type": "action",
            "one": "19",
            "id": "36",
            "content": "socket.target = getFloorTarget(\n    visuals,\n    edge\n)"
        },
        "37": {
            "type": "action",
            "one": "32",
            "id": "37",
            "content": "socket.imageData = imageData"
        }
    },
    "type": "drakon",
    "version": 20180619,
    "updated_by": "stipan",
    "created_by": "stipan",
    "name": "createSocketFromEdge",
    "language": "LANG_S42"
}