{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "240115959",
    "params": "config\nnode",
    "when_created": 1673338712.4076,
    "parent_id": "b3d6c272",
    "props": [],
    "language": "LANG_S42",
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "branchId": 1,
            "one": "4",
            "id": "2",
            "type": "branch",
            "content": "Start pos"
        },
        "4": {
            "flag1": 1,
            "id": "4",
            "type": "question",
            "one": "6",
            "two": "5",
            "content": "node.parent"
        },
        "5": {
            "type": "action",
            "one": "7",
            "id": "5",
            "content": "left = 0"
        },
        "6": {
            "type": "action",
            "one": "7",
            "id": "6",
            "content": "left = config.metre * 2"
        },
        "7": {
            "type": "action",
            "id": "7",
            "one": "11",
            "content": "top = node.h * 2 + config.metre"
        },
        "10": {
            "branchId": 3,
            "one": "20",
            "id": "10",
            "type": "branch",
            "content": "Adjust box"
        },
        "11": {
            "branchId": 2,
            "one": "17",
            "id": "11",
            "type": "branch",
            "content": "Go through children"
        },
        "13": {
            "one": "10",
            "id": "13",
            "type": "loopend",
            "two": "",
            "content": ""
        },
        "14": {
            "one": "15",
            "id": "14",
            "type": "loopbegin",
            "two": "",
            "content": "child; node.children"
        },
        "15": {
            "type": "action",
            "id": "15",
            "one": "21",
            "content": "right = Math.max(\n    right,\n    left + child.subtreeBox.width\n)"
        },
        "17": {
            "type": "action",
            "id": "17",
            "one": "14",
            "content": "right = node.subtreeBox.width"
        },
        "18": {
            "type": "action",
            "one": "19",
            "id": "18",
            "content": "node.subtreeBox.width = right"
        },
        "19": {
            "type": "action",
            "id": "19",
            "one": "1",
            "content": "node.subtreeBox.height = top - config.metre"
        },
        "20": {
            "type": "action",
            "id": "20",
            "one": "18",
            "content": "node.x = node.w\nnode.y = node.h"
        },
        "21": {
            "type": "action",
            "one": "22",
            "id": "21",
            "content": "child.subtreeBox.left = left\nchild.subtreeBox.top = top"
        },
        "22": {
            "type": "action",
            "one": "13",
            "id": "22",
            "content": "top += (\n    child.subtreeBox.height + config.metre\n)"
        }
    },
    "version": 20180619,
    "updated_by": "stipan",
    "type": "drakon",
    "when_updated": 1673339792.6465,
    "name": "calculateTvSubtree",
    "created_by": "stipan"
}