{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "228433591",
    "params": "visuals\nitem",
    "when_created": 1657539683.5961,
    "parent_id": "befd80d4",
    "props": [],
    "when_updated": 1676219114.1538,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "type": "branch",
            "branchId": 0,
            "one": "4",
            "id": "2"
        },
        "3": {
            "type": "action",
            "id": "3",
            "one": "6",
            "content": "content = item.content || \"\""
        },
        "4": {
            "flag1": 0,
            "id": "4",
            "type": "question",
            "two": "5",
            "one": "3",
            "content": "item.type === \"end\""
        },
        "5": {
            "type": "action",
            "one": "6",
            "id": "5",
            "content": "content = visuals.config.end"
        },
        "6": {
            "type": "action",
            "one": "14",
            "id": "6",
            "content": "node = createNode(\n    visuals,\n    item.id,\n    item.type,\n    content,\n    item.id\n)"
        },
        "7": {
            "type": "action",
            "one": "18",
            "id": "7",
            "content": "setNotNull(item, node, \"w\")\nsetNotNull(item, node, \"flag1\")\nsetNotNull(item, node, \"branchId\")\nsetNotNull(item, node, \"one\")\nsetNotNull(item, node, \"two\")\nsetNotNull(item, node, \"side\")\nsetNotNull(item, node, \"link\")\nsetNotNull(item, node, \"margin\")\nsetNotNull(item, node, \"secondary\")\nsetNotNull(item, node, \"parent\")\nsetNotNull(item, node, \"ordinal\")\nsetNotNull(item, node, \"treeType\")\nsetNotNull(item, node, \"collapsed\")\nsetNotNull(item, node, \"image\")"
        },
        "8": {
            "type": "action",
            "id": "8",
            "one": "1",
            "content": "return node"
        },
        "11": {
            "type": "case",
            "one": "7",
            "id": "11"
        },
        "12": {
            "one": "16",
            "id": "12",
            "type": "case",
            "two": "11",
            "content": "\"parend\""
        },
        "13": {
            "one": "15",
            "id": "13",
            "type": "case",
            "two": "12",
            "content": "\"parbegin\""
        },
        "14": {
            "type": "select",
            "id": "14",
            "one": "13",
            "content": "item.type"
        },
        "15": {
            "type": "action",
            "id": "15",
            "one": "7",
            "content": "node.type = \"junction\"\nnode.subtype = item.type"
        },
        "16": {
            "type": "action",
            "one": "17",
            "id": "16",
            "content": "node.finalTarget = item.id"
        },
        "17": {
            "type": "action",
            "id": "17",
            "one": "15",
            "content": "node.mountRight = node"
        },
        "18": {
            "type": "action",
            "one": "21",
            "id": "18",
            "content": "parseStyle(item, node)"
        },
        "21": {
            "type": "action",
            "id": "21",
            "one": "8",
            "content": "incrementImageRefCount(\n    visuals,\n    node.image\n)"
        }
    },
    "updated_by": "stipan",
    "version": 20180619,
    "type": "drakon",
    "language": "LANG_S42",
    "name": "nodeFromItem",
    "created_by": "stipan"
}