{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "263831259",
    "params": "evt",
    "when_created": 1667047173.5395,
    "parent_id": "7abb147c",
    "props": [],
    "when_updated": 1677586741.2438,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "21": {
            "branchId": 3,
            "one": "48",
            "id": "21",
            "type": "branch",
            "content": "Apply and paint"
        },
        "22": {
            "branchId": 2,
            "one": "45",
            "id": "22",
            "type": "branch",
            "content": "Y-coordinate"
        },
        "23": {
            "branchId": 1,
            "one": "25",
            "id": "23",
            "type": "branch",
            "content": "X-coordinate"
        },
        "24": {
            "type": "action",
            "id": "24",
            "one": "1",
            "content": "paintLater(self.widget)"
        },
        "25": {
            "one": "26",
            "id": "25",
            "type": "action",
            "two": "",
            "content": "config = self.widget.config"
        },
        "26": {
            "one": "27",
            "id": "26",
            "type": "action",
            "two": "",
            "content": "zoom = self.widget.zoomFactor"
        },
        "27": {
            "flag1": 1,
            "id": "27",
            "type": "question",
            "two": "39",
            "one": "35",
            "content": "self.handle.xEnabled()"
        },
        "33": {
            "one": "34",
            "id": "33",
            "type": "action",
            "two": "",
            "content": "dx = snapUp(config, dxDia)"
        },
        "34": {
            "one": "38",
            "id": "34",
            "type": "action",
            "two": "",
            "content": "x = self.handleStartX + dx"
        },
        "35": {
            "one": "33",
            "id": "35",
            "type": "action",
            "two": "",
            "content": "dxDia = (evt.clientX - self.startX) / zoom"
        },
        "36": {
            "one": "22",
            "id": "36",
            "type": "action",
            "two": "",
            "content": "x = Math.min(max, Math.max(min, x))"
        },
        "38": {
            "type": "action",
            "one": "36",
            "id": "38",
            "content": "max = self.handle.getMaxX()\nmin = self.handle.getMinX()"
        },
        "39": {
            "type": "action",
            "id": "39",
            "one": "22",
            "content": "x = self.handle.x"
        },
        "40": {
            "one": "41",
            "id": "40",
            "type": "action",
            "two": "",
            "content": "dy = snapUp(config, dyDia)"
        },
        "41": {
            "one": "46",
            "id": "41",
            "type": "action",
            "two": "",
            "content": "y = self.handleStartY + dy"
        },
        "42": {
            "one": "40",
            "id": "42",
            "type": "action",
            "two": "",
            "content": "dyDia = (evt.clientY - self.startY) / zoom"
        },
        "44": {
            "one": "21",
            "id": "44",
            "type": "action",
            "two": "",
            "content": "y = Math.min(max, Math.max(min, y))"
        },
        "45": {
            "flag1": 1,
            "id": "45",
            "type": "question",
            "one": "42",
            "two": "47",
            "content": "self.handle.yEnabled()"
        },
        "46": {
            "type": "action",
            "one": "44",
            "id": "46",
            "content": "max = self.handle.getMaxY()\nmin = self.handle.getMinY()"
        },
        "47": {
            "type": "action",
            "id": "47",
            "one": "21",
            "content": "y = self.handle.y"
        },
        "48": {
            "flag1": 0,
            "id": "48",
            "type": "question",
            "two": "52",
            "one": "51",
            "content": "x === self.handle.x"
        },
        "50": {
            "type": "action",
            "one": "24",
            "id": "50",
            "content": "self.handle.dragTo(x, y)"
        },
        "51": {
            "type": "action",
            "id": "51",
            "one": "50",
            "content": "self.handle.x = x\nself.handle.y = y"
        },
        "52": {
            "flag1": 0,
            "id": "52",
            "type": "question",
            "one": "51",
            "two": "1",
            "content": "y === self.handle.y"
        }
    },
    "updated_by": "stipan",
    "version": 20180619,
    "type": "drakon",
    "language": "LANG_S42",
    "name": "onDrag",
    "created_by": "stipan"
}