{
  "type": "drakon",
  "items": {
    "1": {
      "type": "end"
    },
    "2": {
      "type": "branch",
      "branchId": 0,
      "one": "69"
    },
    "69": {
      "type": "action",
      "content": "let firstAddedIconId = null;\n      let firstIconsForDirection = iconsForDirection;",
      "one": "70"
    },
    "70": {
      "type": "question",
      "content": "!objectsForProcessing || objectsForProcessing.length === 0",
      "one": "73",
      "two": "71",
      "flag1": 1
    },
    "71": {
      "type": "action",
      "content": "return iconsForDirection;",
      "one": "1"
    },
    "72": {
      "type": "loopend",
      "one": "1"
    },
    "73": {
      "type": "loopbegin",
      "one": "74",
      "content": "for (const element of objectsForProcessing)"
    },
    "74": {
      "type": "question",
      "content": "element.type === \"address\"",
      "one": "75",
      "two": "78",
      "flag1": 1
    },
    "75": {
      "type": "action",
      "content": "const targetBranch = ast.branches.find(b => b.name === element.content);",
      "one": "76",
      "id": "75"
    },
    "76": {
      "type": "question",
      "content": "targetBranch",
      "one": "77",
      "two": "72",
      "flag1": 1
    },
    "77": {
      "type": "action",
      "content": "iconsForDirection[0].item.oneBranchId = targetBranch.branchId;",
      "one": "72"
    },
    "78": {
      "type": "question",
      "content": "element.type === \"loop\"",
      "one": "79",
      "two": "80",
      "flag1": 1
    },
    "79": {
      "type": "action",
      "content": "iconsForDirection = processObject(items, element.body, iconsForDirection)",
      "one": "72"
    },
    "80": {
      "type": "action",
      "content": "const newIconId = String(nextNodeId++);\n          const newIcon = {\n            content: element.content,\n            type: element.type\n          };",
      "one": "81"
    },
    "81": {
      "type": "question",
      "content": "element.type === \"loopend\"",
      "one": "82",
      "two": "83",
      "flag1": 1
    },
    "82": {
      "type": "action",
      "content": "newIcon.type = \"arrow-loop\";\n            newIcon.content = \"\";",
      "one": "83"
    },
    "83": {
      "type": "action",
      "content": "items[newIconId] = newIcon;",
      "one": "84"
    },
    "84": {
      "type": "question",
      "content": "firstAddedIconId === null",
      "one": "85",
      "two": "87",
      "flag1": 1
    },
    "85": {
      "type": "action",
      "content": "firstAddedIconId = newIconId;",
      "one": "87"
    },
    "86": {
      "type": "loopend",
      "one": "89"
    },
    "87": {
      "type": "loopbegin",
      "one": "88",
      "content": "for (const itemDir of iconsForDirection)"
    },
    "88": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = newIconId;",
      "one": "86"
    },
    "89": {
      "type": "action",
      "content": "iconsForDirection = [];",
      "one": "90"
    },
    "90": {
      "type": "question",
      "content": "element.type === \"question\"",
      "one": "91",
      "two": "92",
      "flag1": 1
    },
    "91": {
      "type": "action",
      "content": "var iconOne = newIcon;\n            var iconTwo = newIcon;\n\n            newIcon.flag1 = 1;\n\n            let firstIconIsBreak = false;",
      "one": "92"
    },
    "92": {
      "type": "question",
      "content": "element.no && element.no.length > 0 && element.no[0].type === \"break\"",
      "one": "93",
      "two": "94",
      "flag1": 1
    },
    "93": {
      "type": "action",
      "content": "firstIconIsBreak = true;\n              newIcon.flag1 = 0;",
      "one": "96"
    },
    "94": {
      "type": "question",
      "content": "element.yes && element.yes.length > 0 && element.yes[0].type === \"break\"",
      "one": "95",
      "two": "96",
      "flag1": 1
    },
    "95": {
      "type": "action",
      "content": "firstIconIsBreak = true;",
      "one": "96"
    },
    "96": {
      "type": "question",
      "content": "firstIconIsBreak",
      "one": "97",
      "two": "107",
      "flag1": 1
    },
    "97": {
      "type": "action",
      "content": "iconsForDirection.push({ item: iconOne, dir: \"one\" });\n\n              let iconsLoop = [];",
      "one": "98"
    },
    "98": {
      "type": "question",
      "content": "newIcon.flag1 === 1",
      "one": "99",
      "two": "100",
      "flag1": 1
    },
    "99": {
      "type": "action",
      "content": "iconsLoop = processObject(items, element.no, [{ item: iconTwo, dir: \"two\" }]);",
      "one": "102"
    },
    "100": {
      "type": "action",
      "content": "iconsLoop = processObject(items, element.yes, [{ item: iconTwo, dir: \"two\" }]);",
      "one": "102"
    },
    "101": {
      "type": "loopend",
      "one": "104"
    },
    "102": {
      "type": "loopbegin",
      "one": "105",
      "content": "for (const itemDir of iconsLoop)"
    },
    "103": {
      "type": "loopend",
      "one": "72"
    },
    "104": {
      "type": "loopbegin",
      "one": "106",
      "content": "for (const itemDir of firstIconsForDirection)"
    },
    "105": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = firstAddedIconId;",
      "one": "101"
    },
    "106": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = nextNodeId - 1;",
      "one": "103"
    },
    "107": {
      "type": "action",
      "content": "let selectIcon = null;",
      "one": "108"
    },
    "108": {
      "type": "insertion",
      "content": "findExistingIcon",
      "one": "109"
    },
    "109": {
      "type": "question",
      "content": "typeof newIcon.content === 'object' && newIcon.content.operator === 'equal'",
      "one": "111",
      "two": "118",
      "flag1": 1
    },
    "110": {
      "type": "action",
      "content": "newIcon.type = 'case';\n                newIcon.content = newIcon.content.right;",
      "one": "118"
    },
    "111": {
      "type": "question",
      "content": "!findExistingIcon(items, 'select', newIcon.content.left)",
      "one": "112",
      "two": "110",
      "flag1": 1
    },
    "112": {
      "type": "action",
      "content": "let selectIconId = String(nextNodeId++);\n                  selectIcon = { type: 'select', content: newIcon.content.left };\n                  selectIcon.one = newIconId;\n                  items[selectIconId] = selectIcon;",
      "one": "114"
    },
    "113": {
      "type": "loopend",
      "one": "110"
    },
    "114": {
      "type": "loopbegin",
      "one": "115",
      "content": "for (const itemDir of firstIconsForDirection)"
    },
    "115": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = selectIconId;",
      "one": "113"
    },
    "116": {
      "type": "insertion",
      "content": "processQuestionContent",
      "one": "117"
    },
    "117": {
      "type": "action",
      "content": "processQuestionContent(newIcon)",
      "one": "72"
    },
    "118": {
      "type": "question",
      "content": "element.no && element.no.length > 0",
      "one": "119",
      "two": "120",
      "flag1": 1
    },
    "119": {
      "type": "action",
      "content": "iconsForDirection.push(...processObject(items, element.no, [{ item: iconTwo, dir: \"two\" }]))",
      "one": "121"
    },
    "120": {
      "type": "action",
      "content": "iconsForDirection.push({ item: iconTwo, dir: \"two\" });",
      "one": "121"
    },
    "121": {
      "type": "question",
      "content": "element.yes && element.yes.length > 0",
      "one": "122",
      "two": "123",
      "flag1": 1
    },
    "122": {
      "type": "action",
      "content": "iconsForDirection.push(...processObject(items, element.yes, [{ item: iconOne, dir: \"one\" }]));",
      "one": "116"
    },
    "123": {
      "type": "action",
      "content": "iconsForDirection.push({ item: iconOne, dir: \"one\" });",
      "one": "116"
    }
  },
  "params": "items\nobjectsForProcessing\niconsForDirection",
  "style": "{\"maxWidth\":420}"
}