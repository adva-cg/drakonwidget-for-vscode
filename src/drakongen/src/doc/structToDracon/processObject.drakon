{
  "type": "drakon",
  "items": {
    "1": {
      "type": "end"
    },
    "2": {
      "type": "branch",
      "branchId": 0,
      "one": "69"
    },
    "69": {
      "type": "action",
      "content": "let firstAddedIconId = null;\n      let firstIconsForDirection = iconsForDirection;",
      "one": "70"
    },
    "70": {
      "type": "question",
      "content": "!objectsForProcessing || objectsForProcessing.length === 0",
      "one": "73",
      "two": "222",
      "flag1": 0
    },
    "72": {
      "type": "loopend",
      "one": "222"
    },
    "73": {
      "type": "loopbegin",
      "one": "124",
      "content": "for (const element of objectsForProcessing)"
    },
    "124": {
      "type": "question",
      "content": "element.type === \"address\"",
      "one": "174",
      "two": "125",
      "flag1": 0
    },
    "125": {
      "type": "action",
      "content": "const targetBranch = ast.branches.find(b => b.name === element.content);",
      "one": "126",
      "two": ""
    },
    "126": {
      "type": "question",
      "content": "targetBranch",
      "one": "127",
      "two": "72",
      "flag1": 1
    },
    "127": {
      "type": "action",
      "content": "iconsForDirection[0].item.oneBranchId = targetBranch.branchId;",
      "one": "72",
      "two": ""
    },
    "174": {
      "type": "question",
      "content": "element.type === \"loop\"",
      "one": "176",
      "two": "223",
      "flag1": 0
    },
    "176": {
      "type": "action",
      "content": "const newIconId = String(nextNodeId++);\n          const newIcon = {\n            content: element.content,\n            type: element.type\n          };",
      "one": "177",
      "two": ""
    },
    "177": {
      "type": "question",
      "content": "element.type === \"loopend\"",
      "one": "178",
      "two": "179",
      "flag1": 1
    },
    "178": {
      "type": "action",
      "content": "newIcon.type = \"arrow-loop\";\n            newIcon.content = \"\";",
      "one": "179",
      "two": ""
    },
    "179": {
      "type": "action",
      "content": "items[newIconId] = newIcon;",
      "one": "180",
      "two": ""
    },
    "180": {
      "type": "question",
      "content": "firstAddedIconId === null",
      "one": "181",
      "two": "183",
      "flag1": 1
    },
    "181": {
      "type": "action",
      "content": "firstAddedIconId = newIconId;",
      "one": "183",
      "two": ""
    },
    "182": {
      "type": "loopend",
      "one": "185",
      "two": ""
    },
    "183": {
      "type": "loopbegin",
      "one": "184",
      "content": "for (const itemDir of iconsForDirection)",
      "two": ""
    },
    "184": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = newIconId;",
      "one": "182",
      "two": ""
    },
    "185": {
      "type": "action",
      "content": "iconsForDirection = [];",
      "one": "186",
      "two": ""
    },
    "186": {
      "type": "question",
      "content": "element.type === \"question\"",
      "one": "187",
      "two": "188",
      "flag1": 1
    },
    "187": {
      "type": "action",
      "content": "var iconOne = newIcon;\n            var iconTwo = newIcon;\n\n            newIcon.flag1 = 1;\n\n            let firstIconIsBreak = false;",
      "one": "188",
      "two": ""
    },
    "188": {
      "type": "question",
      "content": "element.no && element.no.length > 0 && element.no[0].type === \"break\"",
      "one": "189",
      "two": "190",
      "flag1": 1
    },
    "189": {
      "type": "action",
      "content": "firstIconIsBreak = true;\n              newIcon.flag1 = 0;",
      "one": "192",
      "two": ""
    },
    "190": {
      "type": "question",
      "content": "element.yes && element.yes.length > 0 && element.yes[0].type === \"break\"",
      "one": "191",
      "two": "192",
      "flag1": 1
    },
    "191": {
      "type": "action",
      "content": "firstIconIsBreak = true;",
      "one": "192",
      "two": ""
    },
    "192": {
      "type": "question",
      "content": "firstIconIsBreak",
      "one": "193",
      "two": "203",
      "flag1": 1
    },
    "193": {
      "type": "action",
      "content": "iconsForDirection.push({ item: iconOne, dir: \"one\" });\n\n              let iconsLoop = [];",
      "one": "194",
      "two": ""
    },
    "194": {
      "type": "question",
      "content": "newIcon.flag1 === 1",
      "one": "195",
      "two": "196",
      "flag1": 1
    },
    "195": {
      "type": "action",
      "content": "iconsLoop = processObject(items, element.no, [{ item: iconTwo, dir: \"two\" }]);",
      "one": "198",
      "two": ""
    },
    "196": {
      "type": "action",
      "content": "iconsLoop = processObject(items, element.yes, [{ item: iconTwo, dir: \"two\" }]);",
      "one": "198",
      "two": ""
    },
    "197": {
      "type": "loopend",
      "one": "200",
      "two": ""
    },
    "198": {
      "type": "loopbegin",
      "one": "201",
      "content": "for (const itemDir of iconsLoop)",
      "two": ""
    },
    "199": {
      "type": "loopend",
      "one": "220",
      "two": ""
    },
    "200": {
      "type": "loopbegin",
      "one": "202",
      "content": "for (const itemDir of firstIconsForDirection)",
      "two": ""
    },
    "201": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = firstAddedIconId;",
      "one": "197",
      "two": ""
    },
    "202": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = nextNodeId - 1;",
      "one": "199",
      "two": ""
    },
    "203": {
      "type": "action",
      "content": "let selectIcon = null;",
      "one": "204",
      "two": ""
    },
    "204": {
      "type": "insertion",
      "content": "findExistingIcon",
      "one": "205",
      "two": ""
    },
    "205": {
      "type": "question",
      "content": "typeof newIcon.content === 'object' && newIcon.content.operator === 'equal'",
      "one": "207",
      "two": "214",
      "flag1": 1
    },
    "206": {
      "type": "action",
      "content": "newIcon.type = 'case';\n                newIcon.content = newIcon.content.right;",
      "one": "214",
      "two": ""
    },
    "207": {
      "type": "question",
      "content": "!findExistingIcon(items, 'select', newIcon.content.left)",
      "one": "208",
      "two": "206",
      "flag1": 1
    },
    "208": {
      "type": "action",
      "content": "let selectIconId = String(nextNodeId++);\n                  selectIcon = { type: 'select', content: newIcon.content.left };\n                  selectIcon.one = newIconId;\n                  items[selectIconId] = selectIcon;",
      "one": "210",
      "two": ""
    },
    "209": {
      "type": "loopend",
      "one": "206",
      "two": ""
    },
    "210": {
      "type": "loopbegin",
      "one": "211",
      "content": "for (const itemDir of firstIconsForDirection)",
      "two": ""
    },
    "211": {
      "type": "action",
      "content": "itemDir.item[itemDir.dir] = selectIconId;",
      "one": "209",
      "two": ""
    },
    "214": {
      "type": "question",
      "content": "element.no && element.no.length > 0",
      "one": "215",
      "two": "216",
      "flag1": 1
    },
    "215": {
      "type": "action",
      "content": "iconsForDirection.push(...processObject(items, element.no, [{ item: iconTwo, dir: \"two\" }]))",
      "one": "217",
      "two": ""
    },
    "216": {
      "type": "action",
      "content": "iconsForDirection.push({ item: iconTwo, dir: \"two\" });",
      "one": "217",
      "two": ""
    },
    "217": {
      "type": "question",
      "content": "element.yes && element.yes.length > 0",
      "one": "218",
      "two": "219",
      "flag1": 1
    },
    "218": {
      "type": "action",
      "content": "iconsForDirection.push(...processObject(items, element.yes, [{ item: iconOne, dir: \"one\" }]));",
      "one": "220",
      "two": ""
    },
    "219": {
      "type": "action",
      "content": "iconsForDirection.push({ item: iconOne, dir: \"one\" });",
      "one": "220",
      "two": ""
    },
    "220": {
      "type": "insertion",
      "content": "processQuestionContent",
      "one": "221",
      "two": ""
    },
    "221": {
      "type": "action",
      "content": "processQuestionContent(newIcon)",
      "one": "72",
      "two": ""
    },
    "222": {
      "type": "action",
      "content": "return iconsForDirection;",
      "one": "1"
    },
    "223": {
      "type": "insertion",
      "content": "iconsForDirection = processObject(items, element.body, iconsForDirection)",
      "one": "72"
    }
  },
  "params": "items\nobjectsForProcessing\niconsForDirection",
  "style": "{\"maxWidth\":420}"
}