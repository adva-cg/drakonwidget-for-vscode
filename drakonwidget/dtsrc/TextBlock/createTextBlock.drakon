{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": true,
        "function": true,
        "algoprop": false
    },
    "tag": "866986381",
    "params": "ctx\ntext\noptions\nfonts",
    "when_created": 1667540023.7925,
    "parent_id": "99e62b4e",
    "props": [],
    "when_updated": 1697120960.9701,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "branchId": 1,
            "one": "5",
            "id": "2",
            "type": "branch",
            "content": "Lex"
        },
        "5": {
            "flag1": 0,
            "id": "5",
            "type": "question",
            "one": "36",
            "two": "6",
            "content": "options.singleLine"
        },
        "6": {
            "type": "action",
            "id": "6",
            "one": "7",
            "content": "line = splitLineToTokens(text, \"\")"
        },
        "7": {
            "type": "action",
            "id": "7",
            "one": "13",
            "content": "lines = wrapInLineObjects([line])"
        },
        "9": {
            "type": "action",
            "one": "13",
            "id": "9",
            "content": "lines = wrapInLineObjects(\n    splitToTokens(text)\n)"
        },
        "12": {
            "branchId": 4,
            "one": "32",
            "id": "12",
            "type": "branch",
            "content": "Exit"
        },
        "13": {
            "branchId": 2,
            "one": "16",
            "id": "13",
            "type": "branch",
            "content": "Set font"
        },
        "14": {
            "branchId": 3,
            "one": "20",
            "id": "14",
            "type": "branch",
            "content": "Branch1"
        },
        "15": {
            "one": "17",
            "id": "15",
            "type": "action",
            "two": "",
            "content": "setFontToTokens(lines, options.font, fontCache)"
        },
        "16": {
            "one": "15",
            "id": "16",
            "type": "action",
            "two": "",
            "content": "fontCache = initFontCache()"
        },
        "17": {
            "one": "18",
            "id": "17",
            "type": "action",
            "two": "",
            "content": "fontObj = parseCssFont(\n    options.font,\n    fontCache,\n    true\n)"
        },
        "18": {
            "type": "action",
            "id": "18",
            "one": "14",
            "content": "block = {\n    width: 0,\n    options: options,\n    text: text,\n    lineHeight: options.lineHeight * fontObj\n    .size,\n    fontSize: fontObj.size,\n    lines: lines\n}"
        },
        "19": {
            "type": "loopend",
            "one": "12",
            "id": "19",
            "content": ""
        },
        "20": {
            "type": "loopbegin",
            "id": "20",
            "one": "23",
            "content": "line; lines"
        },
        "22": {
            "type": "loopend",
            "one": "31",
            "id": "22",
            "content": ""
        },
        "23": {
            "type": "loopbegin",
            "id": "23",
            "one": "26",
            "content": "token; line.tokens"
        },
        "24": {
            "type": "action",
            "one": "22",
            "id": "24",
            "content": "token.width = size.width"
        },
        "25": {
            "type": "action",
            "id": "25",
            "one": "24",
            "content": "size = ctx.measureText(token.text)"
        },
        "26": {
            "type": "action",
            "id": "26",
            "one": "39",
            "content": "ctx.font = token.font"
        },
        "27": {
            "flag1": 0,
            "id": "27",
            "type": "question",
            "two": "28",
            "one": "25",
            "content": "token.type === \"space\""
        },
        "28": {
            "type": "action",
            "id": "28",
            "one": "24",
            "content": "size = ctx.measureText(\" \")"
        },
        "29": {
            "type": "action",
            "id": "29",
            "one": "1",
            "content": "return block"
        },
        "31": {
            "type": "action",
            "one": "19",
            "id": "31",
            "content": "block.width = Math.max(\n    calcLineWidth(line.tokens),\n    block.width\n)"
        },
        "32": {
            "type": "action",
            "id": "32",
            "one": "29",
            "content": "block.width += (\n    options.paddingLeft + options.paddingRight\n)"
        },
        "33": {
            "type": "case",
            "one": "9",
            "id": "33"
        },
        "34": {
            "one": "37",
            "id": "34",
            "type": "case",
            "two": "33",
            "content": "\"markdown\""
        },
        "35": {
            "one": "38",
            "id": "35",
            "type": "case",
            "two": "34",
            "content": "\"html\""
        },
        "36": {
            "type": "select",
            "id": "36",
            "one": "35",
            "content": "options.textFormat"
        },
        "37": {
            "type": "action",
            "one": "13",
            "id": "37",
            "content": "lines = splitToTokensMarkdown(text)"
        },
        "38": {
            "type": "action",
            "one": "13",
            "id": "38",
            "content": "lines = splitToTokensHtml(text)"
        },
        "39": {
            "flag1": 1,
            "id": "39",
            "type": "question",
            "two": "27",
            "one": "40",
            "content": "token.font"
        },
        "40": {
            "type": "action",
            "id": "40",
            "one": "27",
            "content": "fonts[token.font] = true"
        }
    },
    "updated_by": "stipan",
    "language": "LANG_S42",
    "type": "drakon",
    "version": 20180619,
    "name": "createTextBlock",
    "created_by": "stipan"
}