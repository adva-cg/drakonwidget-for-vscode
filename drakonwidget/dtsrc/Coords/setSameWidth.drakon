{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "219697459",
    "params": "visuals\nskewer",
    "when_created": 1657639523.4534,
    "parent_id": "794efc2c",
    "props": [],
    "when_updated": 1666933575.0856,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "branchId": 1,
            "one": "3",
            "id": "2",
            "type": "branch",
            "content": "Traverse skewer"
        },
        "3": {
            "type": "action",
            "id": "3",
            "one": "7",
            "content": "width = 0\nleftWidth = 0\nmargin = 0"
        },
        "4": {
            "branchId": 3,
            "one": "1",
            "id": "4",
            "type": "branch",
            "content": "Exit"
        },
        "5": {
            "branchId": 2,
            "one": "9",
            "id": "5",
            "type": "branch",
            "content": "Set width"
        },
        "6": {
            "type": "loopend",
            "one": "5",
            "id": "6",
            "content": ""
        },
        "7": {
            "type": "loopbegin",
            "id": "7",
            "one": "15",
            "content": "node; skewer.nodes"
        },
        "8": {
            "type": "action",
            "one": "19",
            "id": "8",
            "content": "width = Math.max(width, node.w)"
        },
        "9": {
            "type": "action",
            "id": "9",
            "one": "12",
            "content": "skewer.boundary = width"
        },
        "11": {
            "type": "loopend",
            "id": "11",
            "one": "18",
            "content": ""
        },
        "12": {
            "type": "loopbegin",
            "one": "14",
            "id": "12",
            "content": "node; skewer.nodes"
        },
        "13": {
            "type": "action",
            "id": "13",
            "one": "16",
            "content": "node.w = width"
        },
        "14": {
            "flag1": 1,
            "id": "14",
            "type": "question",
            "two": "11",
            "one": "13",
            "content": "shouldAlignWidth(visuals, node)"
        },
        "15": {
            "flag1": 0,
            "id": "15",
            "type": "question",
            "two": "19",
            "one": "8",
            "content": "node.type === \"header\""
        },
        "16": {
            "type": "action",
            "one": "17",
            "id": "16",
            "content": "dur = getDurExtend(visuals, node)"
        },
        "17": {
            "type": "action",
            "id": "17",
            "one": "11",
            "content": "leftWidth = Math.max(\n    leftWidth,\n    dur + width\n)"
        },
        "18": {
            "type": "action",
            "one": "4",
            "id": "18",
            "content": "skewer.leftWidth = leftWidth + margin * visuals\n.config.metre"
        },
        "19": {
            "flag1": 0,
            "id": "19",
            "type": "question",
            "one": "6",
            "two": "20",
            "content": "node.type === \"branch\""
        },
        "20": {
            "type": "action",
            "id": "20",
            "one": "6",
            "content": "margin = getBranchMargin(node)"
        }
    },
    "updated_by": "stipan",
    "version": 20180619,
    "type": "drakon",
    "language": "LANG_S42",
    "name": "setSameWidth",
    "created_by": "stipan"
}