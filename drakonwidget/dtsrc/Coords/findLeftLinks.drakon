{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "83804956",
    "params": "visuals\nskewer",
    "when_created": 1657700335.6014,
    "parent_id": "794efc2c",
    "props": [],
    "created_by": "stipan",
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "branchId": 1,
            "one": "48",
            "id": "2",
            "type": "branch",
            "content": "Start"
        },
        "3": {
            "type": "action",
            "id": "3",
            "one": "6",
            "content": "head = skewerHead(skewer)\ntail = skewerTail(skewer)"
        },
        "4": {
            "branchId": 3,
            "one": "38",
            "id": "4",
            "type": "branch",
            "content": "Exit"
        },
        "5": {
            "branchId": 2,
            "one": "12",
            "id": "5",
            "type": "branch",
            "content": "Step"
        },
        "6": {
            "flag1": 1,
            "id": "6",
            "type": "question",
            "one": "7",
            "two": "4",
            "content": "head.left"
        },
        "7": {
            "flag1": 1,
            "id": "7",
            "type": "question",
            "one": "8",
            "two": "4",
            "content": "tail.left"
        },
        "8": {
            "type": "action",
            "one": "9",
            "id": "8",
            "content": "start = getNextDown(head)\nfinish = getNextUp(tail)"
        },
        "9": {
            "type": "action",
            "id": "9",
            "one": "10",
            "content": "linkSkewers(\n    visuals,\n    start.skewer,\n    skewer,\n    start.w + metre\n)"
        },
        "10": {
            "type": "action",
            "id": "10",
            "one": "11",
            "content": "node = getDown(start)\nboundary = getBoundary(visuals, skewer)"
        },
        "11": {
            "type": "action",
            "id": "11",
            "one": "5",
            "content": "linkSkewers(\n    visuals,\n    finish.skewer,\n    skewer,\n    boundary\n)"
        },
        "12": {
            "flag1": 0,
            "id": "12",
            "type": "question",
            "one": "18",
            "two": "13",
            "content": "node === finish"
        },
        "13": {
            "flag1": 0,
            "id": "13",
            "type": "question",
            "one": "4",
            "two": "14",
            "content": "node.type === \"question\""
        },
        "14": {
            "type": "action",
            "one": "4",
            "id": "14",
            "content": "linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary + metre\n)"
        },
        "15": {
            "type": "case",
            "one": "30",
            "id": "15"
        },
        "16": {
            "one": "28",
            "id": "16",
            "type": "case",
            "two": "15",
            "content": "\"select\""
        },
        "17": {
            "one": "46",
            "id": "17",
            "type": "case",
            "two": "19",
            "content": "\"question\""
        },
        "18": {
            "type": "select",
            "id": "18",
            "one": "17",
            "content": "node.type"
        },
        "19": {
            "one": "33",
            "id": "19",
            "type": "case",
            "two": "20",
            "content": "\"arrow-loop\""
        },
        "20": {
            "one": "43",
            "id": "20",
            "type": "case",
            "two": "16",
            "content": "\"junction\""
        },
        "22": {
            "flag1": 0,
            "id": "22",
            "type": "question",
            "two": "23",
            "one": "47",
            "content": "rightJ.up"
        },
        "23": {
            "type": "action",
            "one": "45",
            "id": "23",
            "content": "linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary + metre\n)"
        },
        "25": {
            "type": "action",
            "id": "25",
            "one": "5",
            "content": "corner = goRight(node)\nnode = getDown(corner)"
        },
        "27": {
            "type": "action",
            "id": "27",
            "one": "5",
            "content": "node = lastCase(node)"
        },
        "28": {
            "type": "action",
            "id": "28",
            "one": "27",
            "content": "linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary\n)"
        },
        "29": {
            "type": "action",
            "id": "29",
            "one": "5",
            "content": "node = getDown(node)"
        },
        "30": {
            "type": "action",
            "id": "30",
            "one": "29",
            "content": "linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary\n)"
        },
        "32": {
            "type": "action",
            "one": "44",
            "id": "32",
            "content": "linkSkewers(\n    visuals,\n    rightJ.skewer,\n    skewer,\n    boundary\n)"
        },
        "33": {
            "type": "action",
            "id": "33",
            "one": "32",
            "content": "rightJ = getRight(node)"
        },
        "35": {
            "flag1": 1,
            "id": "35",
            "type": "question",
            "one": "37",
            "two": "36",
            "content": "node.down"
        },
        "36": {
            "type": "action",
            "id": "36",
            "one": "5",
            "content": "node = goLeft(node)"
        },
        "37": {
            "type": "action",
            "id": "37",
            "one": "5",
            "content": "node = getDown(node)"
        },
        "38": {
            "flag1": 1,
            "id": "38",
            "type": "question",
            "two": "39",
            "one": "1",
            "content": "visuals.branches.length === 1"
        },
        "39": {
            "type": "action",
            "one": "40",
            "id": "39",
            "content": "left = getSilCorner(visuals)"
        },
        "40": {
            "type": "action",
            "one": "41",
            "id": "40",
            "content": "hskewer = visuals.header.skewer"
        },
        "41": {
            "type": "action",
            "id": "41",
            "one": "42",
            "content": "boundary = getBoundary(visuals, hskewer)"
        },
        "42": {
            "type": "action",
            "id": "42",
            "one": "1",
            "content": "linkSkewers(\n    visuals,\n    left.skewer,\n    hskewer,\n    boundary\n)"
        },
        "43": {
            "type": "action",
            "one": "52",
            "id": "43",
            "content": "linkSkewers(\n    visuals,\n    node.skewer,\n    skewer,\n    node.w + boundary\n)"
        },
        "44": {
            "type": "action",
            "one": "5",
            "id": "44",
            "content": "node = getDown(node)"
        },
        "45": {
            "type": "action",
            "one": "5",
            "id": "45",
            "content": "node = getDown(node)"
        },
        "46": {
            "type": "action",
            "id": "46",
            "one": "22",
            "content": "rightJ = getRight(node)"
        },
        "47": {
            "type": "action",
            "id": "47",
            "one": "25",
            "content": "linkSkewers(\n    visuals,\n    rightJ.skewer,\n    skewer,\n    boundary\n)"
        },
        "48": {
            "type": "action",
            "id": "48",
            "one": "3",
            "content": "metre = visuals.config.metre"
        },
        "52": {
            "flag1": 0,
            "id": "52",
            "type": "question",
            "one": "35",
            "two": "53",
            "content": "node.subtype === \"parbegin\""
        },
        "53": {
            "type": "action",
            "one": "5",
            "id": "53",
            "content": "corner = goRight(node)\nnode = getDown(corner)"
        }
    },
    "updated_by": "stipan",
    "version": 20180619,
    "type": "drakon",
    "language": "LANG_S42",
    "name": "findLeftLinks",
    "when_updated": 1666934417.1709
}