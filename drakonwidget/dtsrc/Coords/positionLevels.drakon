{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "907056166",
    "params": "visuals",
    "when_created": 1657703135.6116,
    "parent_id": "794efc2c",
    "props": [],
    "created_by": "stipan",
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "branchId": 1,
            "one": "33",
            "id": "2",
            "type": "branch",
            "content": "Find relative distances"
        },
        "4": {
            "branchId": 5,
            "one": "1",
            "id": "4",
            "type": "branch",
            "content": "Exit"
        },
        "5": {
            "branchId": 2,
            "one": "18",
            "id": "5",
            "type": "branch",
            "content": "Set absolute Y coordinates"
        },
        "6": {
            "branchId": 3,
            "one": "19",
            "id": "6",
            "type": "branch",
            "content": "Inverse Y coordinates"
        },
        "7": {
            "branchId": 4,
            "one": "27",
            "id": "7",
            "type": "branch",
            "content": "Align up cases"
        },
        "8": {
            "type": "loopend",
            "id": "8",
            "one": "5",
            "content": ""
        },
        "9": {
            "type": "loopbegin",
            "one": "10",
            "id": "9",
            "content": "id, node; visuals.nodes"
        },
        "10": {
            "flag1": 1,
            "id": "10",
            "type": "question",
            "two": "8",
            "one": "11",
            "content": "node.down"
        },
        "11": {
            "type": "action",
            "one": "12",
            "id": "11",
            "content": "down = getDown(node)\nleftHeight = getLeftHeight(node)"
        },
        "12": {
            "flag1": 1,
            "id": "12",
            "type": "question",
            "one": "13",
            "two": "14",
            "content": "leftHeight === 0"
        },
        "13": {
            "type": "action",
            "one": "15",
            "id": "13",
            "content": "h = node.h"
        },
        "14": {
            "type": "action",
            "one": "15",
            "id": "14",
            "content": "h = leftHeight"
        },
        "15": {
            "type": "action",
            "one": "16",
            "id": "15",
            "content": "distance = h + down.h + metre"
        },
        "16": {
            "type": "action",
            "id": "16",
            "one": "8",
            "content": "linkLevels(\n    visuals,\n    down.level,\n    node.level,\n    distance\n)"
        },
        "17": {
            "type": "action",
            "id": "17",
            "one": "6",
            "content": "calculateSkewerPos(\n    visuals.levels,\n    visuals.levelLinks,\n    lowest,\n    0\n)"
        },
        "18": {
            "type": "action",
            "id": "18",
            "one": "17",
            "content": "lowest = getLowestLevel(visuals)"
        },
        "19": {
            "type": "action",
            "one": "21",
            "id": "19",
            "content": "max = 0"
        },
        "20": {
            "type": "loopend",
            "id": "20",
            "one": "23",
            "content": ""
        },
        "21": {
            "type": "loopbegin",
            "one": "24",
            "id": "21",
            "content": "id, level; visuals.levels"
        },
        "22": {
            "type": "loopend",
            "one": "7",
            "id": "22",
            "content": ""
        },
        "23": {
            "type": "loopbegin",
            "one": "25",
            "id": "23",
            "content": "id, level; visuals.levels"
        },
        "24": {
            "type": "action",
            "id": "24",
            "one": "20",
            "content": "max = Math.max(max, level.coord)"
        },
        "25": {
            "type": "action",
            "id": "25",
            "one": "22",
            "content": "level.coord = max - level.coord"
        },
        "26": {
            "type": "loopend",
            "one": "4",
            "id": "26",
            "content": ""
        },
        "27": {
            "type": "loopbegin",
            "one": "28",
            "id": "27",
            "content": "id, node; visuals.nodes"
        },
        "28": {
            "flag1": 1,
            "id": "28",
            "type": "question",
            "one": "31",
            "two": "29",
            "content": "node.type === \"case\""
        },
        "29": {
            "flag1": 1,
            "id": "29",
            "type": "question",
            "two": "26",
            "one": "30",
            "content": "node.type === \"branch\""
        },
        "30": {
            "flag1": 1,
            "id": "30",
            "type": "question",
            "two": "26",
            "one": "31",
            "content": "node.up"
        },
        "31": {
            "type": "action",
            "one": "32",
            "id": "31",
            "content": "jun = getUp(node)"
        },
        "32": {
            "type": "action",
            "id": "32",
            "one": "26",
            "content": "node.level.coord = jun.level.coord + metre\n+ node.h"
        },
        "33": {
            "type": "action",
            "id": "33",
            "one": "9",
            "content": "metre = visuals.config.metre"
        }
    },
    "updated_by": "stipan",
    "version": 20180619,
    "type": "drakon",
    "language": "LANG_S42",
    "name": "positionLevels",
    "when_updated": 1657717171.3074
}