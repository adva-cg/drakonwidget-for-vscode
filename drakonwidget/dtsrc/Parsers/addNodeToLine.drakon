{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "814230563",
    "params": "node\nline\nstrong\nem",
    "when_created": 1667817364.1423,
    "parent_id": "f2ec426b",
    "props": [],
    "when_updated": 1675145399.7753,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "type": "branch",
            "branchId": 0,
            "one": "11",
            "id": "2"
        },
        "4": {
            "type": "loopbegin",
            "id": "4",
            "one": "6",
            "content": "child; node.childNodes"
        },
        "5": {
            "type": "loopend",
            "id": "5",
            "one": "1",
            "content": ""
        },
        "6": {
            "type": "action",
            "one": "10",
            "id": "6",
            "content": "name = getNodeName(child)"
        },
        "7": {
            "one": "20",
            "id": "7",
            "type": "case",
            "two": "22",
            "content": "\"em\""
        },
        "8": {
            "one": "19",
            "id": "8",
            "type": "case",
            "two": "7",
            "content": "\"strong\""
        },
        "9": {
            "one": "25",
            "id": "9",
            "type": "case",
            "two": "8",
            "content": "\"#text\""
        },
        "10": {
            "type": "select",
            "id": "10",
            "one": "9",
            "content": "name"
        },
        "11": {
            "flag1": 1,
            "id": "11",
            "type": "question",
            "one": "13",
            "two": "12",
            "content": "strong"
        },
        "12": {
            "flag1": 1,
            "id": "12",
            "type": "question",
            "one": "16",
            "two": "17",
            "content": "em"
        },
        "13": {
            "flag1": 1,
            "id": "13",
            "type": "question",
            "two": "15",
            "one": "14",
            "content": "em"
        },
        "14": {
            "type": "action",
            "id": "14",
            "one": "4",
            "content": "type = \"sem\""
        },
        "15": {
            "type": "action",
            "id": "15",
            "one": "4",
            "content": "type = \"strong\""
        },
        "16": {
            "type": "action",
            "id": "16",
            "one": "4",
            "content": "type = \"em\""
        },
        "17": {
            "type": "action",
            "id": "17",
            "one": "4",
            "content": "type = \"normal\""
        },
        "18": {
            "type": "action",
            "id": "18",
            "one": "21",
            "content": "tokens = splitHtmlTextNode(\n    child.nodeValue,\n    type\n)"
        },
        "19": {
            "type": "action",
            "id": "19",
            "one": "5",
            "content": "addNodeToLine(child, line, true, em)"
        },
        "20": {
            "type": "action",
            "id": "20",
            "one": "5",
            "content": "addNodeToLine(child, line, strong, true)"
        },
        "21": {
            "type": "action",
            "id": "21",
            "one": "5",
            "content": "utils.addRange(tokens, line)"
        },
        "22": {
            "one": "5",
            "id": "22",
            "type": "case",
            "two": "23",
            "content": "\"script\""
        },
        "23": {
            "type": "case",
            "id": "23",
            "one": "24",
            "two": null
        },
        "24": {
            "type": "action",
            "id": "24",
            "one": "5",
            "content": "addNodeToLine(child, line, strong, em)"
        },
        "25": {
            "flag1": 0,
            "id": "25",
            "type": "question",
            "one": "18",
            "two": "26",
            "content": "child.nodeValue.trim() === \"\""
        },
        "26": {
            "type": "action",
            "id": "26",
            "one": "5",
            "content": "line.push({type: \"space\"})"
        }
    },
    "type": "drakon",
    "version": 20180619,
    "updated_by": "stipan",
    "created_by": "stipan",
    "name": "addNodeToLine",
    "language": "LANG_S42"
}