{
    "keywords": {
        "scenario": false,
        "async": false,
        "export": false,
        "function": true,
        "algoprop": false
    },
    "tag": "903052390",
    "params": "widget\nelement\nctx\nconfig",
    "when_created": 1671021108.4879,
    "parent_id": "f298c153",
    "props": [],
    "when_updated": 1673007504.1352,
    "items": {
        "1": {
            "type": "end",
            "id": "1"
        },
        "2": {
            "branchId": 1,
            "one": "33",
            "id": "2",
            "type": "branch",
            "content": "Create top handle"
        },
        "10": {
            "one": "15",
            "id": "10",
            "type": "action",
            "two": "",
            "content": "big = 1000"
        },
        "15": {
            "type": "action",
            "id": "15",
            "one": "16",
            "content": "topHandle = GroupTopHandle()"
        },
        "16": {
            "type": "action",
            "id": "16",
            "one": "17",
            "content": "topHandle.widget = widget\ntopHandle.element = element\ntopHandle.id = element.id\ntopHandle.x = element.hiX + element.x\ntopHandle.y = element.hiY + element.y"
        },
        "17": {
            "type": "action",
            "one": "29",
            "id": "17",
            "content": "topHandle.minY = element.y - big\ntopHandle.maxY = element.y - element.h -\nconfig.metre / 2"
        },
        "21": {
            "branchId": 4,
            "one": "34",
            "id": "21",
            "type": "branch",
            "content": "Insert handle visuals"
        },
        "22": {
            "branchId": 3,
            "one": "23",
            "id": "22",
            "type": "branch",
            "content": "X min and max"
        },
        "23": {
            "flag1": 0,
            "id": "23",
            "type": "question",
            "one": "24",
            "two": "25",
            "content": "element.flag1"
        },
        "24": {
            "one": "26",
            "id": "24",
            "type": "action",
            "two": "",
            "content": "topHandle.minX = element.x + element.w\ntopHandle.maxX = element.x + big"
        },
        "25": {
            "one": "26",
            "id": "25",
            "type": "action",
            "two": "",
            "content": "topHandle.minX = element.x - big\ntopHandle.maxX = element.x - element.w"
        },
        "26": {
            "one": "21",
            "id": "26",
            "type": "action",
            "two": "",
            "content": "bottomHandle.minX = topHandle.minX\nbottomHandle.maxX = topHandle.maxX"
        },
        "28": {
            "one": "1",
            "id": "28",
            "type": "action",
            "two": "",
            "content": "createHandle(visuals, topHandle, ctx)\ncreateHandle(visuals, bottomHandle, ctx)"
        },
        "29": {
            "branchId": 2,
            "one": "30",
            "id": "29",
            "type": "branch",
            "content": "Create bottom handle"
        },
        "30": {
            "one": "31",
            "id": "30",
            "type": "action",
            "two": "",
            "content": "bottomHandle = GroupBottomHandle()"
        },
        "31": {
            "one": "32",
            "id": "31",
            "type": "action",
            "two": "",
            "content": "bottomHandle.widget = widget\nbottomHandle.element = element\nbottomHandle.id = element.id\nbottomHandle.x = element.loX + element.x\nbottomHandle.y = element.loY + element.y"
        },
        "32": {
            "one": "22",
            "id": "32",
            "type": "action",
            "two": "",
            "content": "bottomHandle.minY = element.y + element.h\n+ config.metre / 2\nbottomHandle.maxY = element.y + big"
        },
        "33": {
            "type": "action",
            "id": "33",
            "one": "10",
            "content": "visuals = widget.visuals"
        },
        "34": {
            "type": "action",
            "id": "34",
            "one": "35",
            "content": "topHandle.primId = \"top-\" + element.id"
        },
        "35": {
            "type": "action",
            "one": "28",
            "id": "35",
            "content": "bottomHandle.primId = \"bottom-\" + element\n.id"
        }
    },
    "version": 20180619,
    "type": "drakon",
    "updated_by": "stipan",
    "created_by": "stipan",
    "name": "drawGroupHandles",
    "language": "LANG_S42"
}